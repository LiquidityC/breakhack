# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.30

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/linus/ws/breakhack

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/linus/ws/breakhack/build/debug

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool..."
	cd /home/linus/ws/breakhack/build/debug && /usr/bin/cpack --config ./CPackConfig.cmake
.PHONY : package

# Special rule for the target package
package/fast: package
.PHONY : package/fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool for source..."
	cd /home/linus/ws/breakhack/build/debug && /usr/bin/cpack --config ./CPackSourceConfig.cmake /home/linus/ws/breakhack/build/debug/CPackSourceConfig.cmake
.PHONY : package_source

# Special rule for the target package_source
package_source/fast: package_source
.PHONY : package_source/fast

# Special rule for the target test
test:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running tests..."
	/usr/bin/ctest --force-new-ctest-process $(ARGS)
.PHONY : test

# Special rule for the target test
test/fast: test
.PHONY : test/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake cache editor..."
	/usr/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Available install components are: \"Release\" \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	cd /home/linus/ws/breakhack/build/debug && $(CMAKE_COMMAND) -E cmake_progress_start /home/linus/ws/breakhack/build/debug/CMakeFiles /home/linus/ws/breakhack/build/debug/lib/physfs-3.0//CMakeFiles/progress.marks
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/physfs-3.0/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/linus/ws/breakhack/build/debug/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/physfs-3.0/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/physfs-3.0/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/physfs-3.0/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/linus/ws/breakhack/build/debug && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
lib/physfs-3.0/CMakeFiles/physfs-static.dir/rule:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/physfs-3.0/CMakeFiles/physfs-static.dir/rule
.PHONY : lib/physfs-3.0/CMakeFiles/physfs-static.dir/rule

# Convenience name for target.
physfs-static: lib/physfs-3.0/CMakeFiles/physfs-static.dir/rule
.PHONY : physfs-static

# fast build rule for target.
physfs-static/fast:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/build
.PHONY : physfs-static/fast

# Convenience name for target.
lib/physfs-3.0/CMakeFiles/docs.dir/rule:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/physfs-3.0/CMakeFiles/docs.dir/rule
.PHONY : lib/physfs-3.0/CMakeFiles/docs.dir/rule

# Convenience name for target.
docs: lib/physfs-3.0/CMakeFiles/docs.dir/rule
.PHONY : docs

# fast build rule for target.
docs/fast:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/docs.dir/build.make lib/physfs-3.0/CMakeFiles/docs.dir/build
.PHONY : docs/fast

# Convenience name for target.
lib/physfs-3.0/CMakeFiles/dist.dir/rule:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/physfs-3.0/CMakeFiles/dist.dir/rule
.PHONY : lib/physfs-3.0/CMakeFiles/dist.dir/rule

# Convenience name for target.
dist: lib/physfs-3.0/CMakeFiles/dist.dir/rule
.PHONY : dist

# fast build rule for target.
dist/fast:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/dist.dir/build.make lib/physfs-3.0/CMakeFiles/dist.dir/build
.PHONY : dist/fast

# Convenience name for target.
lib/physfs-3.0/CMakeFiles/uninstall.dir/rule:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/physfs-3.0/CMakeFiles/uninstall.dir/rule
.PHONY : lib/physfs-3.0/CMakeFiles/uninstall.dir/rule

# Convenience name for target.
uninstall: lib/physfs-3.0/CMakeFiles/uninstall.dir/rule
.PHONY : uninstall

# fast build rule for target.
uninstall/fast:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/uninstall.dir/build.make lib/physfs-3.0/CMakeFiles/uninstall.dir/build
.PHONY : uninstall/fast

src/physfs.o: src/physfs.c.o
.PHONY : src/physfs.o

# target to build an object file
src/physfs.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs.c.o
.PHONY : src/physfs.c.o

src/physfs.i: src/physfs.c.i
.PHONY : src/physfs.i

# target to preprocess a source file
src/physfs.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs.c.i
.PHONY : src/physfs.c.i

src/physfs.s: src/physfs.c.s
.PHONY : src/physfs.s

# target to generate assembly for a file
src/physfs.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs.c.s
.PHONY : src/physfs.c.s

src/physfs_archiver_7z.o: src/physfs_archiver_7z.c.o
.PHONY : src/physfs_archiver_7z.o

# target to build an object file
src/physfs_archiver_7z.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_7z.c.o
.PHONY : src/physfs_archiver_7z.c.o

src/physfs_archiver_7z.i: src/physfs_archiver_7z.c.i
.PHONY : src/physfs_archiver_7z.i

# target to preprocess a source file
src/physfs_archiver_7z.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_7z.c.i
.PHONY : src/physfs_archiver_7z.c.i

src/physfs_archiver_7z.s: src/physfs_archiver_7z.c.s
.PHONY : src/physfs_archiver_7z.s

# target to generate assembly for a file
src/physfs_archiver_7z.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_7z.c.s
.PHONY : src/physfs_archiver_7z.c.s

src/physfs_archiver_dir.o: src/physfs_archiver_dir.c.o
.PHONY : src/physfs_archiver_dir.o

# target to build an object file
src/physfs_archiver_dir.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_dir.c.o
.PHONY : src/physfs_archiver_dir.c.o

src/physfs_archiver_dir.i: src/physfs_archiver_dir.c.i
.PHONY : src/physfs_archiver_dir.i

# target to preprocess a source file
src/physfs_archiver_dir.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_dir.c.i
.PHONY : src/physfs_archiver_dir.c.i

src/physfs_archiver_dir.s: src/physfs_archiver_dir.c.s
.PHONY : src/physfs_archiver_dir.s

# target to generate assembly for a file
src/physfs_archiver_dir.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_dir.c.s
.PHONY : src/physfs_archiver_dir.c.s

src/physfs_archiver_grp.o: src/physfs_archiver_grp.c.o
.PHONY : src/physfs_archiver_grp.o

# target to build an object file
src/physfs_archiver_grp.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_grp.c.o
.PHONY : src/physfs_archiver_grp.c.o

src/physfs_archiver_grp.i: src/physfs_archiver_grp.c.i
.PHONY : src/physfs_archiver_grp.i

# target to preprocess a source file
src/physfs_archiver_grp.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_grp.c.i
.PHONY : src/physfs_archiver_grp.c.i

src/physfs_archiver_grp.s: src/physfs_archiver_grp.c.s
.PHONY : src/physfs_archiver_grp.s

# target to generate assembly for a file
src/physfs_archiver_grp.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_grp.c.s
.PHONY : src/physfs_archiver_grp.c.s

src/physfs_archiver_hog.o: src/physfs_archiver_hog.c.o
.PHONY : src/physfs_archiver_hog.o

# target to build an object file
src/physfs_archiver_hog.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_hog.c.o
.PHONY : src/physfs_archiver_hog.c.o

src/physfs_archiver_hog.i: src/physfs_archiver_hog.c.i
.PHONY : src/physfs_archiver_hog.i

# target to preprocess a source file
src/physfs_archiver_hog.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_hog.c.i
.PHONY : src/physfs_archiver_hog.c.i

src/physfs_archiver_hog.s: src/physfs_archiver_hog.c.s
.PHONY : src/physfs_archiver_hog.s

# target to generate assembly for a file
src/physfs_archiver_hog.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_hog.c.s
.PHONY : src/physfs_archiver_hog.c.s

src/physfs_archiver_iso9660.o: src/physfs_archiver_iso9660.c.o
.PHONY : src/physfs_archiver_iso9660.o

# target to build an object file
src/physfs_archiver_iso9660.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_iso9660.c.o
.PHONY : src/physfs_archiver_iso9660.c.o

src/physfs_archiver_iso9660.i: src/physfs_archiver_iso9660.c.i
.PHONY : src/physfs_archiver_iso9660.i

# target to preprocess a source file
src/physfs_archiver_iso9660.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_iso9660.c.i
.PHONY : src/physfs_archiver_iso9660.c.i

src/physfs_archiver_iso9660.s: src/physfs_archiver_iso9660.c.s
.PHONY : src/physfs_archiver_iso9660.s

# target to generate assembly for a file
src/physfs_archiver_iso9660.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_iso9660.c.s
.PHONY : src/physfs_archiver_iso9660.c.s

src/physfs_archiver_mvl.o: src/physfs_archiver_mvl.c.o
.PHONY : src/physfs_archiver_mvl.o

# target to build an object file
src/physfs_archiver_mvl.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_mvl.c.o
.PHONY : src/physfs_archiver_mvl.c.o

src/physfs_archiver_mvl.i: src/physfs_archiver_mvl.c.i
.PHONY : src/physfs_archiver_mvl.i

# target to preprocess a source file
src/physfs_archiver_mvl.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_mvl.c.i
.PHONY : src/physfs_archiver_mvl.c.i

src/physfs_archiver_mvl.s: src/physfs_archiver_mvl.c.s
.PHONY : src/physfs_archiver_mvl.s

# target to generate assembly for a file
src/physfs_archiver_mvl.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_mvl.c.s
.PHONY : src/physfs_archiver_mvl.c.s

src/physfs_archiver_qpak.o: src/physfs_archiver_qpak.c.o
.PHONY : src/physfs_archiver_qpak.o

# target to build an object file
src/physfs_archiver_qpak.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_qpak.c.o
.PHONY : src/physfs_archiver_qpak.c.o

src/physfs_archiver_qpak.i: src/physfs_archiver_qpak.c.i
.PHONY : src/physfs_archiver_qpak.i

# target to preprocess a source file
src/physfs_archiver_qpak.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_qpak.c.i
.PHONY : src/physfs_archiver_qpak.c.i

src/physfs_archiver_qpak.s: src/physfs_archiver_qpak.c.s
.PHONY : src/physfs_archiver_qpak.s

# target to generate assembly for a file
src/physfs_archiver_qpak.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_qpak.c.s
.PHONY : src/physfs_archiver_qpak.c.s

src/physfs_archiver_slb.o: src/physfs_archiver_slb.c.o
.PHONY : src/physfs_archiver_slb.o

# target to build an object file
src/physfs_archiver_slb.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_slb.c.o
.PHONY : src/physfs_archiver_slb.c.o

src/physfs_archiver_slb.i: src/physfs_archiver_slb.c.i
.PHONY : src/physfs_archiver_slb.i

# target to preprocess a source file
src/physfs_archiver_slb.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_slb.c.i
.PHONY : src/physfs_archiver_slb.c.i

src/physfs_archiver_slb.s: src/physfs_archiver_slb.c.s
.PHONY : src/physfs_archiver_slb.s

# target to generate assembly for a file
src/physfs_archiver_slb.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_slb.c.s
.PHONY : src/physfs_archiver_slb.c.s

src/physfs_archiver_unpacked.o: src/physfs_archiver_unpacked.c.o
.PHONY : src/physfs_archiver_unpacked.o

# target to build an object file
src/physfs_archiver_unpacked.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_unpacked.c.o
.PHONY : src/physfs_archiver_unpacked.c.o

src/physfs_archiver_unpacked.i: src/physfs_archiver_unpacked.c.i
.PHONY : src/physfs_archiver_unpacked.i

# target to preprocess a source file
src/physfs_archiver_unpacked.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_unpacked.c.i
.PHONY : src/physfs_archiver_unpacked.c.i

src/physfs_archiver_unpacked.s: src/physfs_archiver_unpacked.c.s
.PHONY : src/physfs_archiver_unpacked.s

# target to generate assembly for a file
src/physfs_archiver_unpacked.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_unpacked.c.s
.PHONY : src/physfs_archiver_unpacked.c.s

src/physfs_archiver_vdf.o: src/physfs_archiver_vdf.c.o
.PHONY : src/physfs_archiver_vdf.o

# target to build an object file
src/physfs_archiver_vdf.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_vdf.c.o
.PHONY : src/physfs_archiver_vdf.c.o

src/physfs_archiver_vdf.i: src/physfs_archiver_vdf.c.i
.PHONY : src/physfs_archiver_vdf.i

# target to preprocess a source file
src/physfs_archiver_vdf.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_vdf.c.i
.PHONY : src/physfs_archiver_vdf.c.i

src/physfs_archiver_vdf.s: src/physfs_archiver_vdf.c.s
.PHONY : src/physfs_archiver_vdf.s

# target to generate assembly for a file
src/physfs_archiver_vdf.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_vdf.c.s
.PHONY : src/physfs_archiver_vdf.c.s

src/physfs_archiver_wad.o: src/physfs_archiver_wad.c.o
.PHONY : src/physfs_archiver_wad.o

# target to build an object file
src/physfs_archiver_wad.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_wad.c.o
.PHONY : src/physfs_archiver_wad.c.o

src/physfs_archiver_wad.i: src/physfs_archiver_wad.c.i
.PHONY : src/physfs_archiver_wad.i

# target to preprocess a source file
src/physfs_archiver_wad.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_wad.c.i
.PHONY : src/physfs_archiver_wad.c.i

src/physfs_archiver_wad.s: src/physfs_archiver_wad.c.s
.PHONY : src/physfs_archiver_wad.s

# target to generate assembly for a file
src/physfs_archiver_wad.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_wad.c.s
.PHONY : src/physfs_archiver_wad.c.s

src/physfs_archiver_zip.o: src/physfs_archiver_zip.c.o
.PHONY : src/physfs_archiver_zip.o

# target to build an object file
src/physfs_archiver_zip.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_zip.c.o
.PHONY : src/physfs_archiver_zip.c.o

src/physfs_archiver_zip.i: src/physfs_archiver_zip.c.i
.PHONY : src/physfs_archiver_zip.i

# target to preprocess a source file
src/physfs_archiver_zip.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_zip.c.i
.PHONY : src/physfs_archiver_zip.c.i

src/physfs_archiver_zip.s: src/physfs_archiver_zip.c.s
.PHONY : src/physfs_archiver_zip.s

# target to generate assembly for a file
src/physfs_archiver_zip.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_archiver_zip.c.s
.PHONY : src/physfs_archiver_zip.c.s

src/physfs_byteorder.o: src/physfs_byteorder.c.o
.PHONY : src/physfs_byteorder.o

# target to build an object file
src/physfs_byteorder.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_byteorder.c.o
.PHONY : src/physfs_byteorder.c.o

src/physfs_byteorder.i: src/physfs_byteorder.c.i
.PHONY : src/physfs_byteorder.i

# target to preprocess a source file
src/physfs_byteorder.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_byteorder.c.i
.PHONY : src/physfs_byteorder.c.i

src/physfs_byteorder.s: src/physfs_byteorder.c.s
.PHONY : src/physfs_byteorder.s

# target to generate assembly for a file
src/physfs_byteorder.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_byteorder.c.s
.PHONY : src/physfs_byteorder.c.s

src/physfs_platform_os2.o: src/physfs_platform_os2.c.o
.PHONY : src/physfs_platform_os2.o

# target to build an object file
src/physfs_platform_os2.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_os2.c.o
.PHONY : src/physfs_platform_os2.c.o

src/physfs_platform_os2.i: src/physfs_platform_os2.c.i
.PHONY : src/physfs_platform_os2.i

# target to preprocess a source file
src/physfs_platform_os2.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_os2.c.i
.PHONY : src/physfs_platform_os2.c.i

src/physfs_platform_os2.s: src/physfs_platform_os2.c.s
.PHONY : src/physfs_platform_os2.s

# target to generate assembly for a file
src/physfs_platform_os2.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_os2.c.s
.PHONY : src/physfs_platform_os2.c.s

src/physfs_platform_posix.o: src/physfs_platform_posix.c.o
.PHONY : src/physfs_platform_posix.o

# target to build an object file
src/physfs_platform_posix.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_posix.c.o
.PHONY : src/physfs_platform_posix.c.o

src/physfs_platform_posix.i: src/physfs_platform_posix.c.i
.PHONY : src/physfs_platform_posix.i

# target to preprocess a source file
src/physfs_platform_posix.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_posix.c.i
.PHONY : src/physfs_platform_posix.c.i

src/physfs_platform_posix.s: src/physfs_platform_posix.c.s
.PHONY : src/physfs_platform_posix.s

# target to generate assembly for a file
src/physfs_platform_posix.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_posix.c.s
.PHONY : src/physfs_platform_posix.c.s

src/physfs_platform_qnx.o: src/physfs_platform_qnx.c.o
.PHONY : src/physfs_platform_qnx.o

# target to build an object file
src/physfs_platform_qnx.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_qnx.c.o
.PHONY : src/physfs_platform_qnx.c.o

src/physfs_platform_qnx.i: src/physfs_platform_qnx.c.i
.PHONY : src/physfs_platform_qnx.i

# target to preprocess a source file
src/physfs_platform_qnx.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_qnx.c.i
.PHONY : src/physfs_platform_qnx.c.i

src/physfs_platform_qnx.s: src/physfs_platform_qnx.c.s
.PHONY : src/physfs_platform_qnx.s

# target to generate assembly for a file
src/physfs_platform_qnx.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_qnx.c.s
.PHONY : src/physfs_platform_qnx.c.s

src/physfs_platform_unix.o: src/physfs_platform_unix.c.o
.PHONY : src/physfs_platform_unix.o

# target to build an object file
src/physfs_platform_unix.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_unix.c.o
.PHONY : src/physfs_platform_unix.c.o

src/physfs_platform_unix.i: src/physfs_platform_unix.c.i
.PHONY : src/physfs_platform_unix.i

# target to preprocess a source file
src/physfs_platform_unix.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_unix.c.i
.PHONY : src/physfs_platform_unix.c.i

src/physfs_platform_unix.s: src/physfs_platform_unix.c.s
.PHONY : src/physfs_platform_unix.s

# target to generate assembly for a file
src/physfs_platform_unix.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_unix.c.s
.PHONY : src/physfs_platform_unix.c.s

src/physfs_platform_windows.o: src/physfs_platform_windows.c.o
.PHONY : src/physfs_platform_windows.o

# target to build an object file
src/physfs_platform_windows.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_windows.c.o
.PHONY : src/physfs_platform_windows.c.o

src/physfs_platform_windows.i: src/physfs_platform_windows.c.i
.PHONY : src/physfs_platform_windows.i

# target to preprocess a source file
src/physfs_platform_windows.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_windows.c.i
.PHONY : src/physfs_platform_windows.c.i

src/physfs_platform_windows.s: src/physfs_platform_windows.c.s
.PHONY : src/physfs_platform_windows.s

# target to generate assembly for a file
src/physfs_platform_windows.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_platform_windows.c.s
.PHONY : src/physfs_platform_windows.c.s

src/physfs_unicode.o: src/physfs_unicode.c.o
.PHONY : src/physfs_unicode.o

# target to build an object file
src/physfs_unicode.c.o:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_unicode.c.o
.PHONY : src/physfs_unicode.c.o

src/physfs_unicode.i: src/physfs_unicode.c.i
.PHONY : src/physfs_unicode.i

# target to preprocess a source file
src/physfs_unicode.c.i:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_unicode.c.i
.PHONY : src/physfs_unicode.c.i

src/physfs_unicode.s: src/physfs_unicode.c.s
.PHONY : src/physfs_unicode.s

# target to generate assembly for a file
src/physfs_unicode.c.s:
	cd /home/linus/ws/breakhack/build/debug && $(MAKE) $(MAKESILENT) -f lib/physfs-3.0/CMakeFiles/physfs-static.dir/build.make lib/physfs-3.0/CMakeFiles/physfs-static.dir/src/physfs_unicode.c.s
.PHONY : src/physfs_unicode.c.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... package"
	@echo "... package_source"
	@echo "... rebuild_cache"
	@echo "... test"
	@echo "... dist"
	@echo "... docs"
	@echo "... uninstall"
	@echo "... physfs-static"
	@echo "... src/physfs.o"
	@echo "... src/physfs.i"
	@echo "... src/physfs.s"
	@echo "... src/physfs_archiver_7z.o"
	@echo "... src/physfs_archiver_7z.i"
	@echo "... src/physfs_archiver_7z.s"
	@echo "... src/physfs_archiver_dir.o"
	@echo "... src/physfs_archiver_dir.i"
	@echo "... src/physfs_archiver_dir.s"
	@echo "... src/physfs_archiver_grp.o"
	@echo "... src/physfs_archiver_grp.i"
	@echo "... src/physfs_archiver_grp.s"
	@echo "... src/physfs_archiver_hog.o"
	@echo "... src/physfs_archiver_hog.i"
	@echo "... src/physfs_archiver_hog.s"
	@echo "... src/physfs_archiver_iso9660.o"
	@echo "... src/physfs_archiver_iso9660.i"
	@echo "... src/physfs_archiver_iso9660.s"
	@echo "... src/physfs_archiver_mvl.o"
	@echo "... src/physfs_archiver_mvl.i"
	@echo "... src/physfs_archiver_mvl.s"
	@echo "... src/physfs_archiver_qpak.o"
	@echo "... src/physfs_archiver_qpak.i"
	@echo "... src/physfs_archiver_qpak.s"
	@echo "... src/physfs_archiver_slb.o"
	@echo "... src/physfs_archiver_slb.i"
	@echo "... src/physfs_archiver_slb.s"
	@echo "... src/physfs_archiver_unpacked.o"
	@echo "... src/physfs_archiver_unpacked.i"
	@echo "... src/physfs_archiver_unpacked.s"
	@echo "... src/physfs_archiver_vdf.o"
	@echo "... src/physfs_archiver_vdf.i"
	@echo "... src/physfs_archiver_vdf.s"
	@echo "... src/physfs_archiver_wad.o"
	@echo "... src/physfs_archiver_wad.i"
	@echo "... src/physfs_archiver_wad.s"
	@echo "... src/physfs_archiver_zip.o"
	@echo "... src/physfs_archiver_zip.i"
	@echo "... src/physfs_archiver_zip.s"
	@echo "... src/physfs_byteorder.o"
	@echo "... src/physfs_byteorder.i"
	@echo "... src/physfs_byteorder.s"
	@echo "... src/physfs_platform_os2.o"
	@echo "... src/physfs_platform_os2.i"
	@echo "... src/physfs_platform_os2.s"
	@echo "... src/physfs_platform_posix.o"
	@echo "... src/physfs_platform_posix.i"
	@echo "... src/physfs_platform_posix.s"
	@echo "... src/physfs_platform_qnx.o"
	@echo "... src/physfs_platform_qnx.i"
	@echo "... src/physfs_platform_qnx.s"
	@echo "... src/physfs_platform_unix.o"
	@echo "... src/physfs_platform_unix.i"
	@echo "... src/physfs_platform_unix.s"
	@echo "... src/physfs_platform_windows.o"
	@echo "... src/physfs_platform_windows.i"
	@echo "... src/physfs_platform_windows.s"
	@echo "... src/physfs_unicode.o"
	@echo "... src/physfs_unicode.i"
	@echo "... src/physfs_unicode.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/linus/ws/breakhack/build/debug && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

